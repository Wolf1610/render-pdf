// components/PdfViewer.tsx
// Simple
"use client";

import { Document, Page, pdfjs } from "react-pdf";
import { useEffect, useState } from "react";
import "react-pdf/dist/Page/AnnotationLayer.css";
import "react-pdf/dist/Page/TextLayer.css";
import { ChevronLeft, ChevronRight, MoveLeftIcon } from "lucide-react";

// âœ… Recommended: automatic worker resolution
pdfjs.GlobalWorkerOptions.workerSrc = new URL(
  "pdfjs-dist/build/pdf.worker.min.mjs",
  import.meta.url
).toString();

export default function PdfViewer({ url }: { url: string }) {
  const [blobUrl, setBlobUrl] = useState<string | null>(null);
  const [numPages, setNumPages] = useState<number>(0);
  const [pageNumber, setPageNumber] = useState<number>(1);

  useEffect(() => {
    const fetchPdf = async () => {
      try {
        const res = await fetch(url);
        const blob = await res.blob();
        setBlobUrl(URL.createObjectURL(blob));
      } catch (e) {
        console.error("PDF load failed:", e);
      }
    };
    fetchPdf();
    return () => blobUrl && URL.revokeObjectURL(blobUrl);
  }, [url]);

  if (!blobUrl) return <p>Loading PDF...</p>;

  return (
    <div className="w-full bg-white rounded-md shadow flex flex-col items-center">
      <div className="h-14 w-full border-b border-zinc-200 flex items-center justify-between px-2">
        <div className="flex items-center gap-1.5">top bar</div>
      </div>

      <div className="flex-1 w-full max-h-screen">
        <Document file={url}>
          <Page pageNumber={1} />
        </Document>
      </div>
      <div className="mb-8 flex items-center">
        <button className="bg-blue-600 text-white font-medium py-1 px-4 cursor-pointer rounded-md mr-3" onClick={() => setPageNumber((p) => Math.max(p - 1, 1))}>
          <ChevronLeft />
        </button>
        <span className="border border-gray-300 px-2 py-1 rounded-md">
          Page {pageNumber} of {numPages}
        </span>
        <button className="bg-blue-600 text-white font-medium py-1 px-4 cursor-pointer rounded-md ml-3" onClick={() => setPageNumber((p) => Math.min(p + 1, numPages))}>
          <ChevronRight />
        </button>
      </div>
    </div>
  );
}
